import pytest
import requests
from FeedCiscoSecureMalwareAnalytics import Client, get_indicators_command, fetch_indicators
from CommonServerPython import *
from test_data.feed_data import banking_dns_response, sinkholed_ip_dns_response


def test_fetch_indicators_command(requests_mock):
    """Unit test
    Given
    - fetch incidents command
    - feed name
    - command raw response
    When
    - run the fetch indicators command.
    Then
    - Validate creates indicators and unifies if they are the same
    """
    client = Client(api_key='1234', verify=False)
    requests_mock.get(
        f'https://panacea.threatgrid.com/api/v3/feeds/sinkholed-ip-dns.json?api_key={client._api_key}',
        json=sinkholed_ip_dns_response,
    )
    feed_name = ['sinkholed-ip-dns']
    first_fetch_date = 'today'
    first_fetch_date = arg_to_datetime(arg=first_fetch_date, arg_name='First fetch date')
    indicators = fetch_indicators(client, feed_name, first_fetch_date)
    assert len(indicators) == 3


def test_fetch_indicators_command_list(requests_mock):
    """Unit test
    Given
    - fetch incidents command
    - list of feed names
    - command raw response
    When
    - run the fetch indicators command with 2 feed names.
    Then
    - Validate creates indicators and unifies if they are the same
    _ Validate that the fields: 'FeedRelatedIndicators' and 'tags' have been updated properly
    """
    client = Client(api_key='1234', verify=False)
    requests_mock.get(
        f'https://panacea.threatgrid.com/api/v3/feeds/sinkholed-ip-dns.json?api_key={client._api_key}',
        json=sinkholed_ip_dns_response,
    )
    requests_mock.get(
        f'https://panacea.threatgrid.com/api/v3/feeds/banking-dns.json?api_key={client._api_key}',
        json=banking_dns_response,
    )
    feed_name = ['sinkholed-ip-dns', 'banking-dns']
    first_fetch_date = 'today'
    first_fetch_date = arg_to_datetime(arg=first_fetch_date, arg_name='First fetch date')
    indicators = fetch_indicators(client, feed_name, first_fetch_date)
    for indicator in indicators:
        if indicator['value'] == 'Example1.com':
            assert len(indicator['fields']['FeedRelatedIndicators']) == 14
            assert len(indicator['fields']['Tags']) == 2
        if indicator['value'] == 'Example3.com':
            assert len(indicator['fields']['FeedRelatedIndicators']) == 4
            assert len(indicator['fields']['Tags']) == 1
    assert len(indicators) == 4
